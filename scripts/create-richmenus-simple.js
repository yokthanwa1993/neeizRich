/**
 * ‡∏™‡∏£‡πâ‡∏≤‡∏á Rich Menu ‡πÅ‡∏ö‡∏ö‡∏á‡πà‡∏≤‡∏¢‡πÜ (‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ Alias)
 * LINE Rich Menu 3-Tab Switcher
 */

const fs = require('fs');
const path = require('path');
const LineAPI = require('../lib/line-api');

// ‡πÇ‡∏´‡∏•‡∏î config
require('dotenv').config({ path: './config/config.env' });

const richMenuA = require('../json/richmenu-a.json');
const richMenuB = require('../json/richmenu-b.json');
const richMenuC = require('../json/richmenu-c.json');

async function createRichMenusSimple() {
    const lineAPI = new LineAPI();
    
    console.log('üöÄ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏™‡∏£‡πâ‡∏≤‡∏á Rich Menu ‡πÅ‡∏ö‡∏ö‡∏á‡πà‡∏≤‡∏¢‡πÜ (3 ‡πÅ‡∏ó‡πá‡∏ö)...\n');
    
    try {
        // 1. ‡∏™‡∏£‡πâ‡∏≤‡∏á Rich Menu A
        console.log('üìù ‡∏™‡∏£‡πâ‡∏≤‡∏á Rich Menu A...');
        const richMenuAResponse = await lineAPI.createRichMenu(richMenuA);
        const richMenuAId = richMenuAResponse.richMenuId;
        console.log(`‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á Rich Menu A ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ${richMenuAId}`);
        
        // 2. ‡∏™‡∏£‡πâ‡∏≤‡∏á Rich Menu B
        console.log('üìù ‡∏™‡∏£‡πâ‡∏≤‡∏á Rich Menu B...');
        const richMenuBResponse = await lineAPI.createRichMenu(richMenuB);
        const richMenuBId = richMenuBResponse.richMenuId;
        console.log(`‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á Rich Menu B ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ${richMenuBId}`);
        
        // 3. ‡∏™‡∏£‡πâ‡∏≤‡∏á Rich Menu C
        console.log('üìù ‡∏™‡∏£‡πâ‡∏≤‡∏á Rich Menu C...');
        const richMenuCResponse = await lineAPI.createRichMenu(richMenuC);
        const richMenuCId = richMenuCResponse.richMenuId;
        console.log(`‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á Rich Menu C ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ${richMenuCId}`);
        
        // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å Rich Menu IDs ‡∏•‡∏á‡πÑ‡∏ü‡∏•‡πå
        console.log('üíæ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å Rich Menu IDs...');
        const configData = {
            RICHMENU_A_ID: richMenuAId,
            RICHMENU_B_ID: richMenuBId,
            RICHMENU_C_ID: richMenuCId,
            RICHMENU_NAME_A: process.env.RICHMENU_NAME_A || 'Tab A',
            RICHMENU_NAME_B: process.env.RICHMENU_NAME_B || 'Tab B',
            RICHMENU_NAME_C: process.env.RICHMENU_NAME_C || 'Tab C'
        };
        
        fs.writeFileSync(
            path.join(__dirname, '../config/richmenu-ids.json'),
            JSON.stringify(configData, null, 2)
        );
        
        console.log('\nüéâ ‡∏™‡∏£‡πâ‡∏≤‡∏á Rich Menu ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!');
        console.log('üìã Rich Menu IDs:');
        console.log(`   Menu A: ${richMenuAId}`);
        console.log(`   Menu B: ${richMenuBId}`);
        console.log(`   Menu C: ${richMenuCId}`);
        console.log('\nüìÅ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ñ‡∏π‡∏Å‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÉ‡∏ô config/richmenu-ids.json');
        console.log('\nüîó ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ï‡πà‡∏≠‡πÑ‡∏õ:');
        console.log('   1. ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û: npm run upload');
        console.log('   2. ‡∏ú‡∏π‡∏Å‡πÄ‡∏°‡∏ô‡∏π‡πÉ‡∏´‡πâ User: npm run link');
        console.log('\n‚ö†Ô∏è ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏: ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏™‡∏£‡πâ‡∏≤‡∏á Alias (‡πÉ‡∏ä‡πâ Rich Menu ID ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á)');
        
        return configData;
        
    } catch (error) {
        console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:', error.message);
        throw error;
    }
}

// ‡∏£‡∏±‡∏ô‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ñ‡πâ‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á
if (require.main === module) {
    createRichMenusSimple().catch(error => {
        console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:', error.message);
        process.exit(1);
    });
}

module.exports = { createRichMenusSimple }; 