/**
 * ‡∏ú‡∏π‡∏Å Rich Menu ‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö User
 * LINE Rich Menu 2-Tab Switcher
 */

const fs = require('fs');
const path = require('path');
const LineAPI = require('../lib/line-api');

// ‡πÇ‡∏´‡∏•‡∏î config
require('dotenv').config({ path: './config/config.env' });

async function linkToUser() {
    const lineAPI = new LineAPI();
    
    console.log('üîó ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ú‡∏π‡∏Å Rich Menu ‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö User...\n');
    
    try {
        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö User ID
        const userId = process.env.USER_ID;
        if (!userId || userId === 'your_user_id_here') {
            throw new Error('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ USER_ID ‡πÉ‡∏ô config/config.env');
        }
        
        // ‡πÇ‡∏´‡∏•‡∏î Rich Menu IDs
        const configPath = path.join(__dirname, '../config/richmenu-ids.json');
        if (!fs.existsSync(configPath)) {
            throw new Error('‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå config/richmenu-ids.json ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏±‡∏ô npm run create ‡∏Å‡πà‡∏≠‡∏ô');
        }
        
        const configData = JSON.parse(fs.readFileSync(configPath, 'utf8'));
        const { RICHMENU_A_ID, RICHMENU_NAME_A } = configData;
        
        // ‡∏ú‡∏π‡∏Å Rich Menu A ‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö User (‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏î‡πâ‡∏ß‡∏¢ Menu A)
        console.log('üìé ‡∏ú‡∏π‡∏Å Rich Menu A ‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö User...');
        await lineAPI.linkRichMenuToUser(userId, RICHMENU_A_ID);
        console.log('‚úÖ ‡∏ú‡∏π‡∏Å Rich Menu A ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
        
        console.log('\nüéâ ‡∏ú‡∏π‡∏Å Rich Menu ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!');
        console.log('üìã ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏ú‡∏π‡∏Å:');
        console.log(`   User ID: ${userId}`);
        console.log(`   Rich Menu ID: ${RICHMENU_A_ID}`);
        console.log(`   Rich Menu Name: ${RICHMENU_NAME_A}`);
        console.log('\nüîó ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ï‡πà‡∏≠‡πÑ‡∏õ:');
        console.log('   1. ‡πÄ‡∏õ‡∏¥‡∏î LINE ‡πÅ‡∏•‡∏∞‡∏ó‡∏î‡∏™‡∏≠‡∏ö Rich Menu');
        console.log('   2. ‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏•‡∏±‡∏ö‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡πÅ‡∏ó‡πá‡∏ö A ‡πÅ‡∏•‡∏∞ B');
        console.log('\nüìù ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°:');
        console.log('   - ‡∏î‡∏π Rich Menu ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: npm run test');
        console.log('   - ‡∏•‡∏ö Rich Menu: npm run cleanup');
        
    } catch (error) {
        console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:', error.message);
        throw error;
    }
}

// ‡∏£‡∏±‡∏ô‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ñ‡πâ‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á
if (require.main === module) {
    linkToUser().catch(error => {
        console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:', error.message);
        process.exit(1);
    });
}

module.exports = { linkToUser }; 